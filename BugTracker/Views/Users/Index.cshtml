@using BugTracker.Helpers
@using Microsoft.AspNet.Identity
@model IEnumerable<BugTracker.Models.ApplicationUser>

@{
    ViewBag.Title = "Index";
}


@if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DisplayName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayName("Roles")
            </th>
            <th>
                @Html.DisplayName("Projects")
            </th>
        </tr>
        

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DisplayName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @{
                        var roleHelper = new UserRolesHelper();
                        var roles = roleHelper.ListUserRoles(item.Id);
                    }
                    @foreach (var role in roles)
                    {
                        @role
                    }
                </td>
                <td>
                    @{
                        var projHelper = new ProjectsHelper();
                        var projects = projHelper.ListUserProjects(item.Id);
                    }
                    @foreach (var project in projects)
                    {
                        @project.Name<br />
                    }
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
}



@* var myTickets = new List<Ticket>();
    foreach(var project in projHelper.ListUserProjects(userid)
    { 
    myTickets.AddRange(db.Tickets.Where(t => t.projectId == project.Id).ToList())
    }
    return myTickets*@